"""replace_email_with_phone

Revision ID: 85bea7b437b3
Revises: 1a31ce608336
Create Date: 2025-06-08 21:55:11.751184

"""
from alembic import op
import sqlalchemy as sa
import sqlmodel.sql.sqltypes
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '85bea7b437b3'
down_revision = '1a31ce608336'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # 先删除依赖email列的视图
    op.execute("DROP VIEW IF EXISTS view_user_info CASCADE")
    op.execute("DROP VIEW IF EXISTS view_active_sessions CASCADE")
    
    # 为没有手机号的用户生成临时手机号
    # 使用用户ID的一部分来生成唯一的手机号
    op.execute("""
        UPDATE users 
        SET phone = '1000' || SUBSTRING(REPLACE(id::text, '-', ''), 1, 7)
        WHERE phone IS NULL OR phone = ''
    """)
    
    # 确保所有用户都有手机号后，将phone字段设置为非空
    op.alter_column('users', 'phone',
               existing_type=sa.VARCHAR(length=20),
               nullable=False,
               existing_nullable=True)
    
    # 删除email相关的索引和约束
    op.drop_index('idx_users_email', table_name='users')
    op.drop_constraint('users_email_key', 'users', type_='unique')
    
    # 创建phone的唯一索引
    op.create_index(op.f('ix_users_phone'), 'users', ['phone'], unique=True)
    
    # 删除email列
    op.drop_column('users', 'email')
    
    # 重新创建视图，使用phone替代email
    op.execute("""
        CREATE VIEW view_user_info AS
        SELECT id, username, phone, full_name, role, is_active, created_at
        FROM users
    """)
    
    op.execute("""
        CREATE VIEW view_active_sessions AS
        SELECT u.id, u.username, u.phone, u.role, u.last_login_at
        FROM users u
        WHERE u.is_active = true
    """)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # 先删除新的视图
    op.execute("DROP VIEW IF EXISTS view_user_info CASCADE")
    op.execute("DROP VIEW IF EXISTS view_active_sessions CASCADE")
    
    # 重新添加email列，使用用户名作为默认邮箱
    op.add_column('users', sa.Column('email', sa.VARCHAR(length=100), autoincrement=False, nullable=True))
    
    # 为email列填充数据
    op.execute("""
        UPDATE users 
        SET email = CONCAT(username, '@example.com')
    """)
    
    # 将email设置为非空
    op.alter_column('users', 'email',
               existing_type=sa.VARCHAR(length=100),
               nullable=False,
               existing_nullable=True)
    
    # 删除phone的唯一索引
    op.drop_index(op.f('ix_users_phone'), table_name='users')
    
    # 重新创建email的索引和约束
    op.create_unique_constraint('users_email_key', 'users', ['email'])
    op.create_index('idx_users_email', 'users', ['email'], unique=False)
    
    # 将phone字段设置回可选
    op.alter_column('users', 'phone',
               existing_type=sa.VARCHAR(length=20),
               nullable=True,
               existing_nullable=False)
    
    # 重新创建原始视图
    op.execute("""
        CREATE VIEW view_user_info AS
        SELECT id, username, email, full_name, role, is_active, created_at
        FROM users
    """)
    
    op.execute("""
        CREATE VIEW view_active_sessions AS
        SELECT u.id, u.username, u.email, u.role, u.last_login_at
        FROM users u
        WHERE u.is_active = true
    """)
    # ### end Alembic commands ###
